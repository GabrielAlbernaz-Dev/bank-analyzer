/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.22
 * Generated at: 2025-02-15 04:04:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.github.gabrielalbernazdev.util.constants.PathConstants;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/home/gabriel-albernaz/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/2.0.0/jakarta.servlet.jsp.jstl-2.0.0.jar!/META-INF/fmt.tld", Long.valueOf(1602884772000L));
    _jspx_dependants.put("file:/home/gabriel-albernaz/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/2.0.0/jakarta.servlet.jsp.jstl-2.0.0.jar", Long.valueOf(1602874032000L));
    _jspx_dependants.put("jar:file:/home/gabriel-albernaz/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/2.0.0/jakarta.servlet.jsp.jstl-2.0.0.jar!/META-INF/c.tld", Long.valueOf(1602884772000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.github.gabrielalbernazdev.util.constants.PathConstants");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fnobody;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fnobody.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"UTF-8\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n");
      out.write("  <title>BankAnalyzer</title>\n");
      out.write("  <style>\n");
      out.write("    html, body, div, span, applet, object, iframe,\n");
      out.write("    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n");
      out.write("    a, abbr, acronym, address, big, cite, code,\n");
      out.write("    del, dfn, em, img, ins, kbd, q, s, samp,\n");
      out.write("    small, strike, strong, sub, sup, tt, var,\n");
      out.write("    b, u, i, center,\n");
      out.write("    dl, dt, dd, ol, ul, li,\n");
      out.write("    fieldset, form, label, legend,\n");
      out.write("    table, caption, tbody, tfoot, thead, tr, th, td,\n");
      out.write("    article, aside, canvas, details, embed,\n");
      out.write("    figure, figcaption, footer, header, hgroup,\n");
      out.write("    menu, nav, output, ruby, section, summary,\n");
      out.write("    time, mark, audio, video {\n");
      out.write("      margin: 0;\n");
      out.write("      padding: 0;\n");
      out.write("      border: 0;\n");
      out.write("      font-size: 100%;\n");
      out.write("      font: inherit;\n");
      out.write("      vertical-align: baseline;\n");
      out.write("    }\n");
      out.write("    article, aside, details, figcaption, figure,\n");
      out.write("    footer, header, hgroup, menu, nav, section {\n");
      out.write("      display: block;\n");
      out.write("    }\n");
      out.write("    body {\n");
      out.write("      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("      line-height: 1;\n");
      out.write("    }\n");
      out.write("    ol, ul {\n");
      out.write("      list-style: none;\n");
      out.write("    }\n");
      out.write("    blockquote, q {\n");
      out.write("      quotes: none;\n");
      out.write("    }\n");
      out.write("    blockquote:before, blockquote:after,\n");
      out.write("    q:before, q:after {\n");
      out.write("      content: '';\n");
      out.write("      content: none;\n");
      out.write("    }\n");
      out.write("    table {\n");
      out.write("      border-collapse: collapse;\n");
      out.write("      border-spacing: 0;\n");
      out.write("    }\n");
      out.write("    :root {\n");
      out.write("      --primary: #f33;\n");
      out.write("      --header-height: 60px;\n");
      out.write("    }\n");
      out.write("    .container {\n");
      out.write("      max-width: 1280px;\n");
      out.write("      margin: 0 auto;\n");
      out.write("    }\n");
      out.write("    #main-container {\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      align-items: stretch;\n");
      out.write("      min-height: calc(100vh - var(--header-height));\n");
      out.write("      background-color: #fbfbfb;\n");
      out.write("      box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("    #main-container .header {\n");
      out.write("      padding: 20px;\n");
      out.write("      max-height: var(--header-height);\n");
      out.write("      background: #fff;\n");
      out.write("      box-shadow: 0 1px 0 0 rgba(17, 17, 17, 0.07);\n");
      out.write("    }\n");
      out.write("    #main-container .header .container {\n");
      out.write("      display: flex;\n");
      out.write("      justify-content: space-between;\n");
      out.write("      align-items: center;\n");
      out.write("    }\n");
      out.write("    #main-container .header .container .brand {\n");
      out.write("      display: flex;\n");
      out.write("      align-items: center;\n");
      out.write("      text-decoration: none;\n");
      out.write("    }\n");
      out.write("    #main-container .header .container .brand .icon {\n");
      out.write("      width: 32px;\n");
      out.write("      height: 32px;\n");
      out.write("      background: linear-gradient(45deg, #ff6b6b, #f06595);\n");
      out.write("      border-radius: 4px;\n");
      out.write("      margin-right: 10px;\n");
      out.write("    }\n");
      out.write("    #main-container .header .container .brand .text {\n");
      out.write("      font-size: 24px;\n");
      out.write("      font-weight: bold;\n");
      out.write("      color: #333;\n");
      out.write("    }\n");
      out.write("    #main-container .main .titles {\n");
      out.write("      padding: 60px 10px;\n");
      out.write("      text-align: center;\n");
      out.write("    }\n");
      out.write("    #main-container .main h1.main-title {\n");
      out.write("      font-size: 33px;\n");
      out.write("      font-weight: 600;\n");
      out.write("      line-height: 44px;\n");
      out.write("      letter-spacing: -1.3px;\n");
      out.write("      color: #f33;\n");
      out.write("    }\n");
      out.write("    #main-container .main h2.main-subtitle {\n");
      out.write("      font-size: 18px;\n");
      out.write("      line-height: 28px;\n");
      out.write("    }\n");
      out.write("    #main-container .main .actions-container {\n");
      out.write("      background: #fff;\n");
      out.write("      padding: 30px;\n");
      out.write("      margin: 20px auto;\n");
      out.write("      max-width: 800px;\n");
      out.write("      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n");
      out.write("      border-radius: 4px;\n");
      out.write("    }\n");
      out.write("    #main-container .main .actions-container h3 {\n");
      out.write("      margin-bottom: 15px;\n");
      out.write("      font-size: 20px;\n");
      out.write("      color: #333;\n");
      out.write("    }\n");
      out.write("    #main-container .main .actions-container form {\n");
      out.write("      display: grid;\n");
      out.write("      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n");
      out.write("      gap: 15px;\n");
      out.write("    }\n");
      out.write("    #main-container .main .actions-container label {\n");
      out.write("      display: block;\n");
      out.write("      font-size: 14px;\n");
      out.write("      margin-bottom: 5px;\n");
      out.write("      color: #555;\n");
      out.write("    }\n");
      out.write("    #main-container .main .actions-container input[type=\"file\"],\n");
      out.write("    #main-container .main .actions-container input[type=\"text\"],\n");
      out.write("    #main-container .main .actions-container input[type=\"number\"],\n");
      out.write("    #main-container .main .actions-container input[type=\"date\"] {\n");
      out.write("      width: 100%;\n");
      out.write("      padding: 8px;\n");
      out.write("      border: 1px solid #ccc;\n");
      out.write("      border-radius: 4px;\n");
      out.write("      box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("    #main-container .main .actions-container .full-width {\n");
      out.write("      grid-column: 1 / -1;\n");
      out.write("    }\n");
      out.write("    #main-container .main .actions-container button {\n");
      out.write("      padding: 10px 20px;\n");
      out.write("      background: var(--primary);\n");
      out.write("      border: none;\n");
      out.write("      color: #fff;\n");
      out.write("      border-radius: 4px;\n");
      out.write("      cursor: pointer;\n");
      out.write("    }\n");
      out.write("    #main-container .main .table-container {\n");
      out.write("      background: #fff;\n");
      out.write("      padding: 30px;\n");
      out.write("      margin: 20px auto;\n");
      out.write("      max-width: 800px;\n");
      out.write("      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n");
      out.write("      border-radius: 4px;\n");
      out.write("      overflow-x: auto;\n");
      out.write("    }\n");
      out.write("    #main-container .main .table-container table {\n");
      out.write("      width: 100%;\n");
      out.write("      border-collapse: collapse;\n");
      out.write("    }\n");
      out.write("    #main-container .main .table-container th,\n");
      out.write("    #main-container .main .table-container td {\n");
      out.write("      padding: 12px 15px;\n");
      out.write("      text-align: left;\n");
      out.write("      border-bottom: 1px solid #ddd;\n");
      out.write("    }\n");
      out.write("    #main-container .main .table-container th {\n");
      out.write("      background: #f2f2f2;\n");
      out.write("      font-weight: 600;\n");
      out.write("      color: #333;\n");
      out.write("    }\n");
      out.write("    #main-container .main .table-container tr:hover {\n");
      out.write("      background: #f9f9f9;\n");
      out.write("    }\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <div id=\"main-container\">\n");
      out.write("    <header class=\"header\">\n");
      out.write("      <div class=\"container\">\n");
      out.write("        <div class=\"brand\">\n");
      out.write("          <div class=\"icon\"></div>\n");
      out.write("          <div class=\"text\">BankAnalyzer</div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </header>\n");
      out.write("    <main class=\"main\">\n");
      out.write("      <div class=\"titles\">\n");
      out.write("        <h1 class=\"main-title\">Analyze transactions</h1>\n");
      out.write("        <h2 class=\"main-subtitle\">The best way to analyze bank transactions in different formats</h2>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"actions-container\">\n");
      out.write("        <h3>Upload &amp; Filter Transactions</h3>\n");
      out.write("        <form id=\"action-form\" action=");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write(" method=\"post\" enctype=\"multipart/form-data\">\n");
      out.write("          <div class=\"full-width\">\n");
      out.write("            <label for=\"file-upload\">Choose the transaction file (CSV, JSON, XML)</label>\n");
      out.write("            <input type=\"file\" id=\"file-upload\" name=\"file\" accept=\"application/json, .csv, .xml\">\n");
      out.write("          </div>\n");
      out.write("          <div hidden>\n");
      out.write("            <label for=\"filter-name\">Name</label>\n");
      out.write("            <input type=\"text\" id=\"filter-name\" name=\"filter-name\" placeholder=\"Transaction Name\">\n");
      out.write("          </div>\n");
      out.write("          <div hidden>\n");
      out.write("            <label for=\"filter-amount\">Amount</label>\n");
      out.write("            <input type=\"number\" id=\"filter-amount\" name=\"filter-amount\" placeholder=\"Transaction Amount\">\n");
      out.write("          </div>\n");
      out.write("          <div hidden>\n");
      out.write("            <label for=\"filter-date\">Date</label>\n");
      out.write("            <input type=\"date\" id=\"filter-date\" name=\"filter-date\">\n");
      out.write("          </div>\n");
      out.write("          <div class=\"full-width\" style=\"text-align: right;\" hidden>\n");
      out.write("            <button type=\"submit\" disabled>Process Transactions</button>\n");
      out.write("          </div>\n");
      out.write("        </form>\n");
      out.write("      </div>\n");
      out.write("      ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    </main>\n");
      out.write("  </div>\n");
      out.write("  <script>\n");
      out.write("    document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("      const fileInput = document.getElementById('file-upload');\n");
      out.write("      const form = document.getElementById('action-form');\n");
      out.write("      const additionalElements = Array.from(form.children).slice(1);\n");
      out.write("      const submitButton = form.querySelector('button[type=\"submit\"]');\n");
      out.write("      function updateFormState() {\n");
      out.write("        const fileIsEmpty = fileInput.files && fileInput.files.length === 0;\n");
      out.write("        additionalElements.forEach(el => { el.hidden = fileIsEmpty; });\n");
      out.write("        submitButton.disabled = fileIsEmpty;\n");
      out.write("      }\n");
      out.write("      updateFormState();\n");
      out.write("      fileInput.addEventListener('change', updateFormState);\n");
      out.write("    });\n");
      out.write("  </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /index.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("REQUEST_URL");
      // /index.jsp(5,0) name = value type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/index.jsp(5,0) '${PathConstants.BANK_TRANSACTION_INDEX_PATH}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${PathConstants.BANK_TRANSACTION_INDEX_PATH}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /index.jsp(208,38) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${REQUEST_URL}", java.lang.Object.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /index.jsp(230,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transactions.size() > 0}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("          <div class=\"table-container\" id=\"table-container\">\n");
          out.write("            <table>\n");
          out.write("              <thead>\n");
          out.write("                <tr>\n");
          out.write("                  <th>ID</th>\n");
          out.write("                  <th>Amount</th>\n");
          out.write("                  <th>Description</th>\n");
          out.write("                  <th>Date</th>\n");
          out.write("                </tr>\n");
          out.write("              </thead>\n");
          out.write("              <tbody>\n");
          out.write("                ");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("              </tbody>\n");
          out.write("            </table>\n");
          out.write("          </div>\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /index.jsp(242,16) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/index.jsp(242,16) '${transactions}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${transactions}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /index.jsp(242,16) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("transaction");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                        <td style=\"color: ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.amount < 0 ? 'red' : 'green'}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(';');
            out.write('"');
            out.write('>');
            if (_jspx_meth_fmt_005fformatNumber_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("</td>\n");
            out.write("                        <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.description}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                        <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.createdAt}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    </tr>\n");
            out.write("                ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatNumber_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  fmt:formatNumber
    org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag _jspx_th_fmt_005fformatNumber_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag) _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag.class);
    boolean _jspx_th_fmt_005fformatNumber_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatNumber_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatNumber_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /index.jsp(245,88) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${transaction.amount}", java.lang.Object.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      // /index.jsp(245,88) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f0.setType("currency");
      int _jspx_eval_fmt_005fformatNumber_005f0 = _jspx_th_fmt_005fformatNumber_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatNumber_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fnobody.reuse(_jspx_th_fmt_005fformatNumber_005f0);
      _jspx_th_fmt_005fformatNumber_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatNumber_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatNumber_005f0_reused);
    }
    return false;
  }
}
