/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.22
 * Generated at: 2025-02-05 04:02:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("  <title>BankAnalyzer</title>\r\n");
      out.write("  <style>\r\n");
      out.write("    html, body, div, span, applet, object, iframe,\r\n");
      out.write("    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n");
      out.write("    a, abbr, acronym, address, big, cite, code,\r\n");
      out.write("    del, dfn, em, img, ins, kbd, q, s, samp,\r\n");
      out.write("    small, strike, strong, sub, sup, tt, var,\r\n");
      out.write("    b, u, i, center,\r\n");
      out.write("    dl, dt, dd, ol, ul, li,\r\n");
      out.write("    fieldset, form, label, legend,\r\n");
      out.write("    table, caption, tbody, tfoot, thead, tr, th, td,\r\n");
      out.write("    article, aside, canvas, details, embed,\r\n");
      out.write("    figure, figcaption, footer, header, hgroup,\r\n");
      out.write("    menu, nav, output, ruby, section, summary,\r\n");
      out.write("    time, mark, audio, video {\r\n");
      out.write("      margin: 0;\r\n");
      out.write("      padding: 0;\r\n");
      out.write("      border: 0;\r\n");
      out.write("      font-size: 100%;\r\n");
      out.write("      font: inherit;\r\n");
      out.write("      vertical-align: baseline;\r\n");
      out.write("    }\r\n");
      out.write("    article, aside, details, figcaption, figure,\r\n");
      out.write("    footer, header, hgroup, menu, nav, section {\r\n");
      out.write("      display: block;\r\n");
      out.write("    }\r\n");
      out.write("    body {\r\n");
      out.write("      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("      line-height: 1;\r\n");
      out.write("    }\r\n");
      out.write("    ol, ul {\r\n");
      out.write("      list-style: none;\r\n");
      out.write("    }\r\n");
      out.write("    blockquote, q {\r\n");
      out.write("      quotes: none;\r\n");
      out.write("    }\r\n");
      out.write("    blockquote:before, blockquote:after,\r\n");
      out.write("    q:before, q:after {\r\n");
      out.write("      content: '';\r\n");
      out.write("      content: none;\r\n");
      out.write("    }\r\n");
      out.write("    table {\r\n");
      out.write("      border-collapse: collapse;\r\n");
      out.write("      border-spacing: 0;\r\n");
      out.write("    }\r\n");
      out.write("    :root {\r\n");
      out.write("      --primary: #f33;\r\n");
      out.write("      --header-height: 60px;\r\n");
      out.write("    }\r\n");
      out.write("    .container {\r\n");
      out.write("      max-width: 1280px;\r\n");
      out.write("      margin: 0 auto;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      flex-direction: column;\r\n");
      out.write("      align-items: stretch;\r\n");
      out.write("      min-height: calc(100vh - var(--header-height));\r\n");
      out.write("      background-color: #fbfbfb;\r\n");
      out.write("      box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .header {\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      max-height: var(--header-height);\r\n");
      out.write("      background: #fff;\r\n");
      out.write("      box-shadow: 0 1px 0 0 rgba(17, 17, 17, 0.07);\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .header .container {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: space-between;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .header .container .brand {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .header .container .brand .icon {\r\n");
      out.write("      width: 32px;\r\n");
      out.write("      height: 32px;\r\n");
      out.write("      background: linear-gradient(45deg, #ff6b6b, #f06595);\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("      margin-right: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .header .container .brand .text {\r\n");
      out.write("      font-size: 24px;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("      color: #333;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .titles {\r\n");
      out.write("      padding: 60px 10px;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main h1.main-title {\r\n");
      out.write("      font-size: 33px;\r\n");
      out.write("      font-weight: 600;\r\n");
      out.write("      line-height: 44px;\r\n");
      out.write("      letter-spacing: -1.3px;\r\n");
      out.write("      color: #f33;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main h2.main-subtitle {\r\n");
      out.write("      font-size: 18px;\r\n");
      out.write("      line-height: 28px;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .actions-container {\r\n");
      out.write("      background: #fff;\r\n");
      out.write("      padding: 30px;\r\n");
      out.write("      margin: 20px auto;\r\n");
      out.write("      max-width: 800px;\r\n");
      out.write("      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .actions-container h3 {\r\n");
      out.write("      margin-bottom: 15px;\r\n");
      out.write("      font-size: 20px;\r\n");
      out.write("      color: #333;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .actions-container form {\r\n");
      out.write("      display: grid;\r\n");
      out.write("      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n");
      out.write("      gap: 15px;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .actions-container label {\r\n");
      out.write("      display: block;\r\n");
      out.write("      font-size: 14px;\r\n");
      out.write("      margin-bottom: 5px;\r\n");
      out.write("      color: #555;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .actions-container input[type=\"file\"],\r\n");
      out.write("    #main-container .main .actions-container input[type=\"text\"],\r\n");
      out.write("    #main-container .main .actions-container input[type=\"number\"],\r\n");
      out.write("    #main-container .main .actions-container input[type=\"date\"] {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      padding: 8px;\r\n");
      out.write("      border: 1px solid #ccc;\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("      box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .actions-container .full-width {\r\n");
      out.write("      grid-column: 1 / -1;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .actions-container button {\r\n");
      out.write("      padding: 10px 20px;\r\n");
      out.write("      background: var(--primary);\r\n");
      out.write("      border: none;\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .table-container {\r\n");
      out.write("      background: #fff;\r\n");
      out.write("      padding: 30px;\r\n");
      out.write("      margin: 20px auto;\r\n");
      out.write("      max-width: 800px;\r\n");
      out.write("      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("      overflow-x: auto;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .table-container table {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      border-collapse: collapse;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .table-container th,\r\n");
      out.write("    #main-container .main .table-container td {\r\n");
      out.write("      padding: 12px 15px;\r\n");
      out.write("      text-align: left;\r\n");
      out.write("      border-bottom: 1px solid #ddd;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .table-container th {\r\n");
      out.write("      background: #f2f2f2;\r\n");
      out.write("      font-weight: 600;\r\n");
      out.write("      color: #333;\r\n");
      out.write("    }\r\n");
      out.write("    #main-container .main .table-container tr:hover {\r\n");
      out.write("      background: #f9f9f9;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <div id=\"main-container\">\r\n");
      out.write("    <header class=\"header\">\r\n");
      out.write("      <div class=\"container\">\r\n");
      out.write("        <div class=\"brand\">\r\n");
      out.write("          <div class=\"icon\"></div>\r\n");
      out.write("          <div class=\"text\">BankAnalyzer</div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </header>\r\n");
      out.write("    <main class=\"main\">\r\n");
      out.write("      <div class=\"titles\">\r\n");
      out.write("        <h1 class=\"main-title\">Analyze transactions</h1>\r\n");
      out.write("        <h2 class=\"main-subtitle\">The best way to analyze transactions in different formats</h2>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"actions-container\">\r\n");
      out.write("        <h3>Upload &amp; Filter Transactions</h3>\r\n");
      out.write("        <form id=\"action-form\">\r\n");
      out.write("          <div class=\"full-width\">\r\n");
      out.write("            <label for=\"file-upload\">Choose the transaction file (CSV, JSON, XML)</label>\r\n");
      out.write("            <input type=\"file\" id=\"file-upload\" accept=\".csv, .json, .txt, .xml\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div hidden>\r\n");
      out.write("            <label for=\"filter-name\">Name</label>\r\n");
      out.write("            <input type=\"text\" id=\"filter-name\" name=\"filter-name\" placeholder=\"Transaction Name\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div hidden>\r\n");
      out.write("            <label for=\"filter-amount\">Amount</label>\r\n");
      out.write("            <input type=\"number\" id=\"filter-amount\" name=\"filter-amount\" placeholder=\"Transaction Amount\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div hidden>\r\n");
      out.write("            <label for=\"filter-date\">Date</label>\r\n");
      out.write("            <input type=\"date\" id=\"filter-date\" name=\"filter-date\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"full-width\" style=\"text-align: right;\" hidden>\r\n");
      out.write("            <button type=\"submit\" disabled>Process Transactions</button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"table-container\" id=\"table-container\" hidden>\r\n");
      out.write("        <table>\r\n");
      out.write("          <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("              <th>ID</th>\r\n");
      out.write("              <th>Name</th>\r\n");
      out.write("              <th>Amount</th>\r\n");
      out.write("              <th>Date</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("          </thead>\r\n");
      out.write("          <tbody>\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td>1</td>\r\n");
      out.write("              <td>Payment A</td>\r\n");
      out.write("              <td>$100.00</td>\r\n");
      out.write("              <td>2025-01-15</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td>2</td>\r\n");
      out.write("              <td>Payment B</td>\r\n");
      out.write("              <td>$200.00</td>\r\n");
      out.write("              <td>2025-01-20</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td>3</td>\r\n");
      out.write("              <td>Payment C</td>\r\n");
      out.write("              <td>$150.00</td>\r\n");
      out.write("              <td>2025-01-25</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("          </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("      </div>\r\n");
      out.write("    </main>\r\n");
      out.write("  </div>\r\n");
      out.write("  <script>\r\n");
      out.write("    document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("      const fileInput = document.getElementById('file-upload');\r\n");
      out.write("      const form = document.getElementById('action-form');\r\n");
      out.write("      const additionalElements = Array.from(form.children).slice(1);\r\n");
      out.write("      const submitButton = form.querySelector('button[type=\"submit\"]');\r\n");
      out.write("      function updateFormState() {\r\n");
      out.write("        const fileIsEmpty = fileInput.files && fileInput.files.length === 0;\r\n");
      out.write("        additionalElements.forEach(el => { el.hidden = fileIsEmpty; });\r\n");
      out.write("        submitButton.disabled = fileIsEmpty;\r\n");
      out.write("      }\r\n");
      out.write("      updateFormState();\r\n");
      out.write("      fileInput.addEventListener('change', updateFormState);\r\n");
      out.write("      form.addEventListener('submit', function(e) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        document.getElementById('table-container').hidden = false;\r\n");
      out.write("      });\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
